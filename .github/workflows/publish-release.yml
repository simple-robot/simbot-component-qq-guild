name: Publish Release
on:
  push:
    tags:
      - v3.**.**

env:
  GPG_KEY_ID: ${{ secrets.SECRET_KEY_ID }}
  GPG_SECRET_KEY: ${{ secrets.SECRET_KEY }}
  GPG_PASSWORD: ${{ secrets.SECRET_PASS }}
  OSSRH_USER: ${{ secrets.OSS_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSS_PASSWORD }}
  GRADLE_OPTS: "-Xmx4G -Xms4G -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8"


jobs:
  run-test:
    name: Run Test
    runs-on: ubuntu-latest
    steps:
      # 检出仓库代码
      - name: Check Out Repo
        uses: actions/checkout@v3

      # setup Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      # setup Gradle
      - name: Gradle Run Test
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: clean build test


  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: run-test
    steps:
      # 检出仓库代码
      - name: Check Out Repo
        uses: actions/checkout@v3

      # setup Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      # setup Gradle
      - name: Gradle Publish Release
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: clean build publishToSonatype closeAndReleaseStagingRepository --warning-mode all --info -Porg.gradle.jvmargs="org.gradle.jvmargs=-Xmx4G -Xms4G -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8"
        env:
          SIMBOT_IS_SNAPSHOT: false
          SIMBOT_RELEASES_ONLY: true

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: publish-release
    permissions:
      contents: write
    steps:
      # 检出仓库代码
      - name: Check Out Repo
        uses: actions/checkout@v3

        # Create gitHub release
      - name: Create Github Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ secrets.PUSH_TOKEN }}
          body_path: .changelog/${{ github.ref_name }}.md
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, 'preview') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}


  publish-snapshot:
    name: Publish snapshot
    runs-on: ubuntu-latest
    needs: publish-release
    steps:
      # 检出仓库代码
      - name: Check out repo
        uses: actions/checkout@v3

      # setup Java
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      # setup Gradle
      - name: Gradle publish snapshot
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: clean publishToSonatype closeAndReleaseStagingRepository
        env:
          SIMBOT_IS_SNAPSHOT: true
          SIMBOT_SNAPSHOT_ONLY: true
